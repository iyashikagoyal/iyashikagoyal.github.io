This is the flow of the files to be executed.
Files used: reviews_60601-60606.csv and restaurants_60601-60606.csv as provided for the yelp.
1. yelp_review.py : Pre-processed the file.
        Result: rev_60601-07.csv
2. avg_rev_rating.py : Grouped the rev_60601-07.csv on the restaurant id and calculated the mean for each restaurants. 
        Result: rev_60601-60606.csv
3. normalize_address: normalize the addresses of the yelp and food-inspection files.
                Csv ysed: rev_60601-60606.csv
                          Food_Inspections_60601_07.csv : Filtered File downloaded from the City of Chicago.
                Result : food_address_normalized.csv
                         yelp_address_normalized.csv
4. foodyelptemp.py : searched the files on the basis of names , and addresses. Changed the name of yelp names, addresses to the equivalent names in food-inspection file so that the two files could be merged on the basis of name and addresses.
                Csv used: food_address_normalized.csv
                         yelp_address_normalized.csv
                Result: yelp_inspection_name.csv
5. food_yelp_visualize : The yelp_inspection_name.csv received from the last step is combined with food_address_normalized to get numberOfResults.csv which is the license number of the restaurant, avg_rating, and #pass, #conditional, #fail. 
Then the data is visualized. For each restaurants, maximum from (#pass, #fail, #conditional) is used with the average   rating of that restaurants. 
The plot shows that for all the ratings, the avg. review rating of restaurants that passed the inspection is higher than the #Fail, #Conditional. 
                Csv Used: yelp_inspection_name.csv
                          food_address_normalized
                Result:   numberOfResults.csv
                
6. num_of_results_file.py : In file, numberofResults.csv is refined to create the final csv file
                        Result : food_results_rating 
                
